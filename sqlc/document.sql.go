// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: document.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createDocument = `-- name: CreateDocument :one
INSERT INTO documents (file_path)
VALUES ($1)
ON CONFLICT (file_path) DO UPDATE
    SET updated_at = CURRENT_TIMESTAMP
RETURNING id
`

func (q *Queries) CreateDocument(ctx context.Context, filePath string) (pgtype.UUID, error) {
	row := q.db.QueryRow(ctx, createDocument, filePath)
	var id pgtype.UUID
	err := row.Scan(&id)
	return id, err
}

const getDocumentIDByFilePath = `-- name: GetDocumentIDByFilePath :one
SELECT id
FROM documents
WHERE file_path = $1
`

func (q *Queries) GetDocumentIDByFilePath(ctx context.Context, filePath string) (pgtype.UUID, error) {
	row := q.db.QueryRow(ctx, getDocumentIDByFilePath, filePath)
	var id pgtype.UUID
	err := row.Scan(&id)
	return id, err
}
