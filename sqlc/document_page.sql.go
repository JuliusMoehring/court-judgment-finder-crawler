// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: document_page.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
	"github.com/pgvector/pgvector-go"
)

const createDocumentPage = `-- name: CreateDocumentPage :one
INSERT INTO document_pages (page, text, embeddings, document_id)
VALUES ($1, $2, $3, $4)
ON CONFLICT (document_id, page) DO UPDATE
    SET document_id = $4,
        page        = $1,
        updated_at  = CURRENT_TIMESTAMP
RETURNING id
`

type CreateDocumentPageParams struct {
	Page       int32
	Text       string
	Embeddings pgvector.Vector
	DocumentID pgtype.UUID
}

func (q *Queries) CreateDocumentPage(ctx context.Context, arg CreateDocumentPageParams) (pgtype.UUID, error) {
	row := q.db.QueryRow(ctx, createDocumentPage,
		arg.Page,
		arg.Text,
		arg.Embeddings,
		arg.DocumentID,
	)
	var id pgtype.UUID
	err := row.Scan(&id)
	return id, err
}
